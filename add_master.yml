---
- hosts: all
  sudo: yes
  remote_user: "{{ ssh_connect_user }}"
  vars:
    ansible_ssh_pipelining: tasks
  tasks:
    - name: Check all Nodes
      ping: 

- hosts: k8s-cluster:etcd
  gather_facts: false
  sudo: yes
  remote_user: "{{ ssh_connect_user }}"
  roles:
    - { role: downloads-ssh-key, tags: [copy_ssh_private_key]}

- name: Nodes Initialize
  hosts: k8s-cluster-add-master
  sudo: yes
  remote_user: "{{ ssh_connect_user }}"
  vars:
    ansible_ssh_pipelining: tasks
  roles:
    - { role: docker-install, when: ansible_lsb.id == 'Ubuntu', tags: [docker]}
    - { role: clean-install, tags: [clean]}
    - { role: system-initialize, tags: [system]}
    - { role: downloads-packages, tags: [packages]}
  tasks:
    - { include: roles/kubernetes-default/includes/main.yml }

- name: Run Nodes
  hosts: k8s-cluster-add-master
  sudo: yes
  remote_user: "{{ ssh_connect_user }}"
  vars:
    ansible_ssh_pipelining: true
  roles:
    - { role: kubernetes-manifests, tags: [manifests]}

- name: Copy Cluster CA Files to Nodes.
  hosts: kube-master[0]
  sudo: yes
  remote_user: "{{ ssh_connect_user }}"
  vars:
    ansible_ssh_pipelining: true
  roles:
    - { role: k8s-add-master, tags: [add_master]}

- name: Add Nodes
  hosts: k8s-cluster-add-master
  sudo: yes
  remote_user: "{{ ssh_connect_user }}"
  vars:
    ansible_ssh_pipelining: true
  tasks:
    - { include: roles/k8s-add-master/includes/initialize_ca.yml }
    - { include: roles/kubernetes-default/includes/kubelet_pem.yml }
    - { include: roles/kubernetes-bootstraps/includes/admin.yml }
    - name: Run Kubelet
      service:
        name: kubelet
        state: started